  @model IEnumerable<Sireed.APPLICATION.DTO.IndicateurDTO>
@{
    ViewData["Title"] = "Indicateurs par Région";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>

    <script src="https://js.arcgis.com/4.25/"></script>
    <link rel="stylesheet" href="https://js.arcgis.com/4.25/esri/themes/light/main.css">

     <link href="~/css/indicateur/navbar.css" rel="stylesheet" />
 
    <!-- Bootstrap CSS (Version 3.4.1 ou plus récente) -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">

    <!-- Font Awesome pour les icônes -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <!-- CSS de DataTables -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.dataTables.min.css">

    <!-- jQuery et DataTables JS -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.print.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.7.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>

    <style>
        /* Suppression de la marge par défaut et bordure arrondie de la navbar */
/*         .navbar {
            margin-bottom: 0;
            border-radius: 0;
        }
 */
        /* Footer avec fond gris et padding */
        footer {
            background-color: whitesmoke;
            padding: 25px;
            border-radius:10px;
        }

        /* Styles personnalisés pour le DataTable */
        table.dataTable {
            width: 100%;
            margin-top: 20px;
            border-collapse: collapse !important;
        }

            table.dataTable thead th {
                background-color: transparent;
                color: black;
                padding: 12px 15px;
                text-align: left;
                font-weight: bold;
                border-bottom: 2px solid #ddd;
            }

            table.dataTable tbody tr:nth-child(even) {
                background-color: #f9f9f9;
            }

            table.dataTable tbody tr:hover {
                background-color: #e0e0e0;
            }

            table.dataTable td {
                padding: 12px 15px;
                border-bottom: 1px solid #ddd;
            }

        div.dataTables_filter {
            float: right;
        }

        .jumbotron {
            padding-top: 7px;
            padding-bottom: 7px;
        }
    

        /* Styles généraux pour le corps et la section */
.content-body {
    background-color: #f4f5f7;
    padding: 20px;
    font-family: Arial, sans-serif;
}

.card {
    border-radius: 6px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    background-color: #ffffff;
    margin-bottom: 20px;
    overflow: hidden;
}

.card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
            background-color: #2b8a3e;
    color: #fff;
    padding: 15px;
    border-bottom: 1px solid #ddd;
    border-radius: 6px 6px 0 0;
}

.card-title {
    font-size: 1.25rem;
    font-weight: bold;
}

.heading-elements {
    display: flex;
    align-items: center;
}

.heading-elements ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
}

.heading-elements ul li {
    margin-left: 10px;
}

.heading-elements a {
    color: #ffffff;
    text-decoration: none;
    font-size: 1.2rem;
}

.heading-elements a:hover {
    color: #e9ecef;
}

.card-content {
    padding: 15px;
}

.height-400,
.height-500 {
    position: relative;
    height: 400px;
}

.height-500 {
    height: 500px;
}

/* Style pour les canvas des graphiques */
canvas {
    width: 100% !important;
    height: 100% !important;
    display: block;
}

/* Responsive */
/* media (max-width: 768px) {
    .card-header {
        flex-direction: column;
        text-align: center;
    }
    .heading-elements ul {
        justify-content: center;
        margin-top: 10px;
    }
}
 */

        /* Style général de la carte */
        .card {
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            margin-bottom: 20px;
            overflow: hidden;
            position: relative;
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #018749;
            color: #ffffff;
            padding: 15px;
            border-radius: 8px 8px 0 0;
        }

        .card-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin: 0;
        }

        /* Boutons d'actions alignés à droite */
        .heading-elements {
            display: flex;
            align-items: center;
        }

            .heading-elements ul {
                display: flex;
                list-style: none;
                margin: 0;
                padding: 0;
            }

                .heading-elements ul li {
                    margin-left: 10px;
                }

            .heading-elements a {
                color: #ffffff;
                font-size: 1rem;
                text-decoration: none;
                cursor: pointer;
            }

                .heading-elements a:hover {
                    color: #e9ecef;
                }

        /* Style du contenu */
        .card-content {
            padding: 20px;
            background-color: #f8f9fa;
        }

        /* Zones pour les graphiques */
        .height-400,
        .height-500 {
            position: relative;
            height: 400px;
        }

        /* Cache le contenu quand la carte est réduite */
        .card-content.collapse {
            display: none;
        }

        /* Style pour agrandir la carte */
        .card.expanded {
            position: fixed;
            top: 10%;
            left: 10%;
            width: 80%;
            height: 80%;
            z-index: 1000;
        }

        /* Style du spinner pour l'effet de rechargement */
        .spinner {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 2rem;
            color: #018749;
        }

        .element {
            transform: scale(1.2); /* Adjust scale as needed */
            transform-origin: 0 0; /* Adjust the origin point as needed */
        }



       /*STYLE POUR PAGINATION DATATABLE*/

        .dataTables_paginate .paginate_button {
            border-radius: 10px !important;
            background-color: white !important;
            border: 1px solid #007bff !important;
            color: #007bff !important;
            padding: 0.5em 1em !important;
            margin-right: 5px !important;
            transition: background-color 0.3s, color 0.3s !important;
        }

            .dataTables_paginate .paginate_button:hover {
                background-color: green !important;
                color: white !important;
            }

            .dataTables_paginate .paginate_button.current {
                background-color: #007bff !important;
                color: white !important;
                
            }

            .dataTables_paginate .paginate_button.disabled {
                color: #ccc !important;
                pointer-events: none !important;
                background-color: white !important;
                border: 1px solid #ccc !important;
            }

            /*ARCGIS*/
        #mapDiv {
            height: 500px; /* Ajustez la hauteur de la carte */
            width: 100%; /* La carte prend toute la largeur disponible */
        }

      /*Modal Indicateur*/
        /* Style pour le modal */
        /* Style pour le modal */
        .modal-content {
            background-color: #ffffff;
            color: #2c3e50;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .modal-header {
            background-color: #27ae60;
            color: #ffffff;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            padding: 20px;
            font-size: 1.25rem;
        }

            .modal-header .modal-title {
                font-weight: bold;
            }

            .modal-header .close {
                color: #ffffff;
                font-size: 1.5rem;
            }

        .modal-body {
            padding: 20px;
            font-size: 1rem;
        }

        .container-fluid {
            padding: 0 20px;
        }

        select.form-control {
            background-color: #ecf0f1;
            color: #2c3e50;
            border-radius: 8px;
            border: 1px solid #27ae60;
            font-size: 1rem;
            padding: 10px;
        }

            select.form-control:focus {
                border-color: #2ecc71;
                background-color: #ffffff;
            }

        h3#regionTitle {
            font-size: 1.5rem;
            color: #27ae60;
            margin-bottom: 1rem;
        }

        .card {
            background-color: #ffffff;
            border-radius: 10px;
            margin-bottom: 20px;
            border: 1px solid #27ae60;
        }

        .card-header {
            background-color: #27ae60;
            color: #fff;
            padding: 15px;
            font-size: 1.25rem;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        .card-body {
            padding: 15px;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

            .table th, .table td {
                padding: 12px;
                text-align: left;
            }

            .table th {
                background-color: #27ae60;
                color: #ffffff;
            }

            .table td {
                background-color: #ecf0f1;
                color: #2c3e50;
                border-bottom: 1px solid #27ae60;
            }

        .table-bordered {
            border: 1px solid #27ae60;
        }

            .table-bordered th, .table-bordered td {
                border-color: #27ae60;
            }

        canvas#populationChart {
            width: 100% !important;
            height: 400px;
            background-color: #ecf0f1;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .modal-footer {
            background-color: #ffffff;
            padding: 15px;
            text-align: right;
        }

            .modal-footer .btn-secondary {
                background-color: #27ae60;
                color: #fff;
                border-radius: 8px;
                padding: 8px 16px;
                border: none;
            }

                .modal-footer .btn-secondary:hover {
                    background-color: #2ecc71;
                }



    </style>
</head>
<body>

    <!-- Navbar -->
    <!-- Navbar -->
    <nav class="navbar">
        <div class="navbar-container">
            <div class="navbar-left">
                <a href="#" class="nav-link">Home</a>
                <a href="#" class="nav-link">Privacy</a>
            </div>
            <div class="navbar-right">
                <a href="#" class="nav-link login-button">Connexion</a>
            </div>
            <div class="toggle" id="toggle-btn">&#9776;</div>
        </div>
    </nav>

    <div class="navbar-menu" id="navbar-menu">
        <a href="#" class="nav-link">Home</a>
        <a href="#" class="nav-link">Privacy</a>
        <a href="#" class="nav-link login-button">Connexion</a>
    </div>
   @* <nav class="navbar">
    <div class="navbar-container">
        <div class="navbar-left">
            <a href="#" class="nav-link">Home</a>
            <a href="#" class="nav-link">Privacy</a>
        </div>
        <div class="navbar-right">
            <a href="#" class="nav-link login-button">Connexion</a>
        </div>
        <div class="toggle" id="toggle-btn">&#9776;</div>
    </div>
    </nav>

    <div class="navbar-menu" id="navbar-menu">
        <a href="#" class="nav-link">Home</a>
        <a href="#" class="nav-link">Privacy</a>
        <a href="#" class="nav-link login-button">Connexion</a>
    </div> *@

    <script>
        // document.getElementById("toggle-btn").onclick = function () {
        //     const menu = document.getElementById("navbar-menu");
        //     menu.classList.toggle("active");
        // }
        const toggleBtn = document.getElementById("toggle-btn");
        const menu = document.getElementById("navbar-menu");

        toggleBtn.onclick = function () {
            menu.classList.toggle("active");
        }

        function checkScreenSize() {
            if (window.innerWidth > 768) {
                // En mode desktop, assurez-vous que le menu est visible et désactivez le toggle
                menu.classList.remove("active");
            }
        }

        // Vérifiez la taille de l'écran au chargement
        checkScreenSize();

        // Vérifiez la taille de l'écran à chaque redimensionnement de la fenêtre
        window.onresize = checkScreenSize;
    </script>


     
    <!-- Jumbotron -->
    <div class="jumbotron text-center" style="border-radius:15px">
        <div class="container">
           @*  <h1>My Portfolio</h1>
            <p>Some text that represents "Me"...</p> *@
            <img src="https://www.mmsp.gov.ma/sites/default/files/fav.png" style="width:80px">
            
        </div>
    </div>



    <!-- Exemples de cartes -->
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Indicateurs</h4>
            <div class="heading-elements">
                <ul class="list-inline mb-0">
                    <li><a data-action="collapse"><i class="ft-minus"><i class="fa-regular fa-window-minimize"></i></i></a></li>
                    <li><a data-action="reload"><i class="ft-rotate-cw"><i class="fa-duotone fa-solid fa-rotate-right fa-spin"></i></i></a></li>
                    <li><a data-action="expand"><i class="ft-maximize">⛶</i></a></li>
                    <li><a data-action="close"><i class="ft-x"><i class="fa-duotone fa-solid fa-rectangle-xmark fa-fade"></i></i></a></li>
                </ul>
            </div>
        </div>
        <div class="card-content">
            <div class="height-400">
                <!-- Contenu de la carte -->
                <!-- Tableau DataTables -->
                <!-- Tableau DataTables -->
                <div class="container-fluid" style="border-radius:10px">
                    <table id="example" class="display" style="border-radius:10px">
                        <thead>
                            <tr>
                                <th>Nom de la Région</th>
                                <th>Nom de l'Indicateur</th>
                                <th>Description de l'Indicateur</th>
                                <th>Superficie</th>
                                <th>Population</th>
                                <th>Description de la Région</th>
                                <th>Valeur</th>
                                <th>Type</th>
                                <th>Unité</th>
                                <th>Année</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.RegionNomDTO</td>
                                        <td>@item.IndicateurNomDTO</td>
                                        <td>@item.IndicateurDescriptionDTO</td>
                                        <td>@item.SuperficieDTO</td>
                                        <td>@item.PopulationDTO</td>
                                        <td>@item.RegionDescriptionDTO</td>
                                        <td>@item.ValeurDTO</td>
                                        <td>@item.TypeDTO</td>
                                        <td>@item.UniteDTO</td>
                                        <td>@item.AnneeDTO</td>
                                        <td>
                                            <a href="#" class="btn btn-light" data-toggle="modal" data-target="#maModal" data-region="@item.RegionNomDTO"><i class="fa-solid fa-map-location-dot"></i></a>
                                            <a href="#" class="btn btn-light">

                                                <div style="margin-bottom: 15px;">

                                                    <label>@item.IndicateurNomDTO</label>

                                                    <div style="position: relative; height: 5px; width: 50%; background-color: #e0e0e0; border-radius: 5px;">


                                                        <div style="height: 100%; width: @item.PercentageDTO%; background-color: #4caf50; border-radius: 5px;"
                                                             title="Année: @item.AnneeDTO | Région: @item.RegionNomDTO | Nombre : @item.NombreIndicDTO">

                                                            <span style="position: absolute; right: 10px; color:forestgreen;">

                                                                @item.PercentageDTO%


                                                            </span>

                                                        </div>

                                                    </div>

                                                </div>
                                                
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <!-- Contenu de la carte -->
                <canvas id="column-chart" style="width: 100%; height: 100%;">
                  
                </canvas>
            </div>
        </div>
    </div>

    <script>

        document.querySelectorAll('.btn-light').forEach(btn => {

            btn.addEventListener('mouseover', function () {

                this.querySelector('.tooltiptext').style.display = 'block';

            });

            btn.addEventListener('mouseout', function () {

                this.querySelector('.tooltiptext').style.display = 'none';

            });

        });

    </script>

    <script>
        fetch('/Indicateurs/GetNombreIndic')
            .then(response => response.json())
            .then(data => {
                document.getElementById('nombreValue').innerText = data;

                var debugTest = document.getElementById('nombreValue');

                console.log(debugTest);


            })
            .catch(error => console.error('Erreur:', error));
    </script>

@*     <div style="height:50vh"></div> *@

    <!-- Fenêtre Modale -->
    <!-- Fenêtre Modale -->
    <!-- Fenêtre Modale -->
@*     <div class="modal fade" id="maModal" tabindex="-1" aria-labelledby="maModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-fullscreen">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="maModalLabel">Données de Population</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Fermer">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row h-100">
                            <!-- Tableau de données -->
                            <div class="col-md-6 h-50">
                                <h6>Tableau de Données</h6>
                                <table class="table table-bordered h-100">
                                    <thead>
                                        <tr>
                                            <th>Commune</th>
                                            <th>Population</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>Maaziz (CR)</td>
                                            <td>11502</td>
                                        </tr>
                                        <tr>
                                            <td>Oulmes (CR)</td>
                                            <td>18786</td>
                                        </tr>
                                        <tr>
                                            <td>Tiddas (CR)</td>
                                            <td>10047</td>
                                        </tr>
                                        <!-- Ajouter d'autres lignes si nécessaire -->
                                    </tbody>
                                </table>
                            </div>
                            <!-- Graphique (exemple d'une barre horizontale simple) -->
                            <div class="col-md-6 h-50">
                                <h6>Graphique de Population</h6>
                                <div class="chart-placeholder" style="width: 100%; height: 100%; background-color: lightgray;">
                                    <p class="text-center">[Graphique de population ici]</p>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-3 h-50">
                            <!-- Carte -->
                            <div class="col-12 h-100">
                                <h6>Carte</h6>
                                <div class="map-placeholder" style="width: 100%; height: 100%; background-color: #e0e0e0;">
                                    <p class="text-center">[Carte interactive ici]</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                </div>
            </div>
        </div>
    </div> *@

    <!-- populationModal.html -->
    <!-- Modal -->
    <!-- Modal -->
    <!-- Modal -->
    <div class="modal fade" id="maModal" tabindex="-1" aria-labelledby="maModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="maModalLabel">Données de Population</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Fermer">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <!-- Sélecteur de région -->
                        <select id="regionSelector" class="form-control mb-3">
                            <option value="Rabat-Salé-Zemmour-Zaër">Rabat-Salé-Zemmour-Zaër</option>
                            <option value="Tanger-Tétouan-Al Hoceima">Tanger-Tétouan-Al Hoceima</option>
                            <option value="Fès-Meknès">Fès-Meknès</option>
                        </select>

                        <h3 id="regionTitle">Statistiques de Population pour</h3>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="card">
                                    <div class="card-header">
                                        <h4 class="card-title">Détails de Population</h4>
                                    </div>
                                    <div class="card-body">
                                        <table class="table table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Commune</th>
                                                    <th>Population</th>
                                                </tr>
                                            </thead>
                                            <tbody id="populationTableBody">
                                                <!-- Les données seront insérées ici par JavaScript -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="card">
                                    <div class="card-header">
                                        <h4 class="card-title">Graphique de Population</h4>
                                    </div>
                                    <div class="card-body">
                                        <canvas id="populationChart" style="width: 100%; height: 400px;"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        require(["esri/Map", "esri/views/MapView"], function (Map, MapView) {
            // Créer la carte avec un basemap de type 'streets'
            var map = new Map({
                basemap: "streets" // Vous pouvez changer ici le type de basemap (ex. 'topo-vector', 'satellite', etc.)
            });

            // Créer une vue pour afficher la carte
            var view = new MapView({
                container: "mapDiv", // ID de l'élément où la carte sera affichée
                map: map,
                center: [-6.84165, 34.020882], // Coordonnées pour centrer sur Rabat-Salé
                zoom: 12 // Niveau de zoom pour la région de Rabat-Salé
            });
        });
    </script>



    <style>
       
    </style>
     
    <!-- Footer -->
    <footer class="container-fluid text-center">
        <img style="margin-top:5px;width:300px" src="/Images/Rabat_Sale_Kenitra/logo-footer3.png">
    </footer>

    <!-- Bootstrap and jQuery JS -->
@*     <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script> *@

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>



    <!-- Initialisation de DataTables -->
    <script>
        $(document).ready(function () {
            $('#example').DataTable({
                "dom": 'Bfrtip',
                "paging": true,
                "autoWidth": true,
                "buttons": [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fas fa-file-excel"></i>',
                        titleAttr: 'Exporter en Excel',
                        className: 'custom-excel-button'  // Ajout d'une classe personnalisée
                    },
                    {
                        extend: 'pdfHtml5',
                        text: '<i class="fas fa-file-pdf"></i>',
                        titleAttr: 'Exporter en PDF',
                        className: 'custom-pdf-button'    // Ajout d'une classe personnalisée
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print"></i>',
                        titleAttr: 'Imprimer',
                        className: 'custom-print-button'  // Ajout d'une classe personnalisée
                    }
                ]
            });
        });
    </script>

    <!-- Bootstrap JS -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    

    <!-- SCRIPT CARTE -->
    <script>

        $(document).ready(function () {
            let myChart; // Variable pour le graphique

            // Fonction pour mettre à jour le graphique
            function updateChart(chartData) {
                const ctx = document.getElementById('populationChart').getContext('2d');

                // Si un graphique existe, on le détruit pour en créer un nouveau
                if (myChart) {
                    myChart.destroy();
                }

                myChart = new Chart(ctx, {
                    type: 'bar', // Type de graphique
                    data: {
                        labels: chartData.labels,
                        datasets: [{
                            label: 'Population (normalisée)',
                            data: chartData.data,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 100 // Limiter l'échelle à 100 pour afficher les proportions
                            }
                        }
                    }
                });
            }

            // Fonction pour charger les données à partir de l'API
            function loadData(selectedRegion) {
                var year = 2023; // Année par défaut

                // Appel AJAX pour récupérer les données de population
                $.ajax({
                    url: '/Indicateurs/GetPopulationData', // URL de l'API
                    type: 'GET',
                    data: { regionNom: selectedRegion, year: year },
                    success: function (response) {
                        // Mise à jour du tableau de population
                        $('#populationTableBody').empty(); // Vider le tableau

                        let totalPopulation = 0;
                        // Calculer la population totale
                        $.each(response.populationData, function (index, commune) {
                            totalPopulation += commune.population;
                        });

                        // Ajouter les données au tableau et préparer les données pour le graphique
                        let chartLabels = [];
                        let chartData = [];
                        $.each(response.populationData, function (index, commune) {
                            // Ajouter la commune et la population au tableau
                            $('#populationTableBody').append(
                                `<tr><td>${commune.commune}</td><td>${commune.population}</td></tr>`
                            );

                            // Calculer la proportion de chaque population par rapport à la population totale
                            let normalizedPopulation = (commune.population / totalPopulation) * 100;
                            chartLabels.push(commune.commune);
                            chartData.push(normalizedPopulation);
                        });

                        // Mise à jour du graphique
                        response.populationChartData = { labels: chartLabels, data: chartData };
                        updateChart(response.populationChartData);
                    },
                    error: function () {
                        console.error('Erreur lors de la récupération des données');
                    }
                });
            }

            // Quand le modal est ouvert, charger les données pour la région sélectionnée
            $('#maModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Bouton qui a déclenché le modal
                var selectedRegion = $('#regionSelector').val(); // Récupérer la région du sélecteur
                $('#regionTitle').text('Statistiques de Population pour ' + selectedRegion); // Mettre à jour le titre du modal
                loadData(selectedRegion); // Charger les données pour la région par défaut
            });

            // Quand le sélecteur de région change, mettre à jour les données dans le modal
            $('#regionSelector').change(function () {
                var selectedRegion = $(this).val(); // Récupérer la région sélectionnée
                $('#regionTitle').text('Statistiques de Population pour ' + selectedRegion); // Mettre à jour le titre
                loadData(selectedRegion); // Recharger les données de la nouvelle région
            });
        });

        // $(document).ready(function () {
        //     let myChart; // Variable pour le graphique

        //     // Fonction pour mettre à jour le graphique
        //     function updateChart(chartData) {
        //         const ctx = document.getElementById('populationChart').getContext('2d');

        //         // Si un graphique existe, on le détruit pour en créer un nouveau
        //         if (myChart) {
        //             myChart.destroy();
        //         }

        //         myChart = new Chart(ctx, {
        //             type: 'bar', // Type de graphique
        //             data: {
        //                 labels: chartData.labels,
        //                 datasets: [{
        //                     label: 'Population',
        //                     data: chartData.data,
        //                     backgroundColor: 'rgba(75, 192, 192, 0.2)',
        //                     borderColor: 'rgba(75, 192, 192, 1)',
        //                     borderWidth: 1
        //                 }]
        //             },
        //             options: {
        //                 scales: {
        //                     y: {
        //                         beginAtZero: true
        //                     }
        //                 }
        //             }
        //         });
        //     }

        //     // Fonction pour charger les données à partir de l'API
        //     function loadData(selectedRegion) {
        //         var year = 2023; // Année par défaut

        //         // Appel AJAX pour récupérer les données de population
        //         $.ajax({
        //             url: '/Indicateurs/GetPopulationData', // URL de l'API
        //             type: 'GET',
        //             data: { regionNom: selectedRegion, year: year },
        //             success: function (response) {
        //                 // Mise à jour du tableau de population
        //                 $('#populationTableBody').empty(); // Vider le tableau

        //                 // Ajouter les données au tableau
        //                 $.each(response.populationData, function (index, commune) {
        //                     $('#populationTableBody').append(
        //                         `<tr><td>${commune.commune}</td><td>${commune.population}</td></tr>`
        //                     );
        //                 });

        //                 // Mise à jour du graphique
        //                 updateChart(response.populationChartData);
        //             },
        //             error: function () {
        //                 console.error('Erreur lors de la récupération des données');
        //             }
        //         });
        //     }

        //     // Quand le modal est ouvert, charger les données pour la région sélectionnée
        //     $('#maModal').on('show.bs.modal', function (event) {
        //         var button = $(event.relatedTarget); // Bouton qui a déclenché le modal
        //         var selectedRegion = $('#regionSelector').val(); // Récupérer la région du sélecteur
        //         $('#regionTitle').text('Statistiques de Population pour ' + selectedRegion); // Mettre à jour le titre du modal
        //         loadData(selectedRegion); // Charger les données pour la région par défaut
        //     });

        //     // Quand le sélecteur de région change, mettre à jour les données dans le modal
        //     $('#regionSelector').change(function () {
        //         var selectedRegion = $(this).val(); // Récupérer la région sélectionnée
        //         $('#regionTitle').text('Statistiques de Population pour ' + selectedRegion); // Mettre à jour le titre
        //         loadData(selectedRegion); // Recharger les données de la nouvelle région
        //     });
        // });
        // $(document).ready(function () {
        //     let myChart; // Déclaration de la variable pour le graphique

        //     // Événement de changement pour le sélecteur de région
        //     $('#regionSelector').change(function () {
        //         var selectedRegion = $(this).val();
        //         var year = 2023; // Remplacez par l'année souhaitée

        //         // Appel AJAX pour récupérer les données de population
        //         $.ajax({
        //             url: '/Indicateurs/GetPopulationData', // Modifiez cette URL
        //             type: 'GET',
        //             data: { regionNom: selectedRegion, year: year },
        //             success: function (response) {
        //                 // Mise à jour du tableau
        //                 $('#populationTableBody').empty(); // Vider le tableau
        //                 $.each(response.populationData, function (index, commune) {
        //                     $('#populationTableBody').append(
        //                         `<tr><td>${commune.commune}</td><td>${commune.population}</td></tr>`
        //                     );
        //                 });

        //                 // Mise à jour du graphique
        //                 updateChart(response.populationChartData);
        //             },
        //             error: function () {
        //                 console.error('Erreur lors de la récupération des données');
        //             }
        //         });
        //     });

        //     // Fonction pour mettre à jour le graphique
        //     function updateChart(chartData) {
        //         const ctx = document.getElementById('populationChart').getContext('2d');

        //         // Si le graphique existe, détruisez-le avant d'en créer un nouveau
        //         if (myChart) {
        //             myChart.destroy(); // Détruire l'ancien graphique
        //         }

        //         myChart = new Chart(ctx, {
        //             type: 'bar', // Type de graphique
        //             data: {
        //                 labels: chartData.labels,
        //                 datasets: [{
        //                     label: 'Population',
        //                     data: chartData.data,
        //                     backgroundColor: 'rgba(75, 192, 192, 0.2)',
        //                     borderColor: 'rgba(75, 192, 192, 1)',
        //                     borderWidth: 1
        //                 }]
        //             },
        //             options: {
        //                 scales: {
        //                     y: {
        //                         beginAtZero: true
        //                     }
        //                 }
        //             }
        //         });
        //     }
        // });

        // $(document).ready(function () {
        //     // Fonction appelée lors du changement de sélection
        //     $('#regionSelector').change(function () {
        //         var selectedRegion = $(this).val();
        //         var year = 2023; // Remplacez par l'année souhaitée ou récupérez-la dynamiquement

        //         // Appel AJAX pour récupérer les données de population
        //         $.ajax({
        //             url: '/Indicateurs/GetPopulationData', // Remplacez par l'URL de votre API
        //             type: 'GET',
        //             data: { regionNom: selectedRegion, year: year },
        //             success: function (response) {
        //                 // Mettez à jour le tableau avec les données récupérées
        //                 $('#populationTableBody').empty(); // Vider le tableau avant d'ajouter de nouvelles lignes
        //                 $.each(response.populationData, function (index, commune) {
        //                     $('#populationTableBody').append(
        //                         `<tr><td>${commune.commune}</td><td>${commune.population}</td></tr>`
        //                     );
        //                 });

        //                 // Mettre à jour le graphique en fonction des données
        //                 updateChart(response.populationChartData);
        //             },
        //             error: function () {
        //                 console.error('Erreur lors de la récupération des données');
        //             }
        //         });
        //     });
        // });

        // // Fonction pour mettre à jour le graphique
        // function updateChart(chartData) {
        //     var ctx = document.getElementById('populationChart').getContext('2d');
        //     var myChart = new Chart(ctx, {
        //         type: 'bar',
        //         data: {
        //             labels: chartData.labels,
        //             datasets: [{
        //                 label: 'Population',
        //                 data: chartData.data,
        //                 backgroundColor: 'rgba(75, 192, 192, 0.2)',
        //                 borderColor: 'rgba(75, 192, 192, 1)',
        //                 borderWidth: 1
        //             }]
        //         },
        //         options: {
        //             scales: {
        //                 y: {
        //                     beginAtZero: true
        //                 }
        //             }
        //         }
        //     });
        // }


 


        // $(document).ready(function () {
        //     // Vérifiez si le graphique existe avant d'essayer de le détruire
        //     if (window.populationChart && window.populationChart instanceof Chart) {
        //         window.populationChart.destroy();
        //     }

        //     // Écoutez les clics sur les boutons de la table
        //     $('body').on('click', '[data-toggle="modal"]', function () {
        //         var regionNom = $(this).data('region');
        //         var selectedYear = $('#yearSelector').val(); // Récupère l'année sélectionnée

        //         $.ajax({
        //             url: '/Indicateurs/GetPopulationData',
        //             type: 'GET',
        //             data: { regionNom: regionNom, year: selectedYear },
        //             success: function (data) {
        //                 console.log("Data from server:", data); // Vérifiez les données dans la console

        //                 // Vide le tableau avant d'ajouter les nouvelles lignes
        //                 var tableBody = $('#populationTableBody').empty();
        //                 data.populationData.forEach(function (item) {
        //                     tableBody.append(
        //                         `<tr><td>${item.commune}</td><td>${item.population}</td></tr>`
        //                     );
        //                 });

        //                 // Rafraîchit le graphique avec les nouvelles données
        //                 loadPopulationChart(data.populationChartData);
        //             }
        //         });
        //     });

        //     // Fonction pour créer le graphique
        //     function loadPopulationChart(chartData) {
        //         // Vérifie que les données ne sont pas vides
        //         if (!chartData || chartData.labels.length === 0 || chartData.data.length === 0) {
        //             alert("Pas de données pour afficher le graphique.");
        //             return;
        //         }

        //         var ctx = document.getElementById('populationChart').getContext('2d');

        //         // Détruit l'ancien graphique, s'il existe
        //         if (window.populationChart && window.populationChart instanceof Chart) {
        //             window.populationChart.destroy();
        //         }

        //         // Crée un nouveau graphique
        //         window.populationChart = new Chart(ctx, {
        //             type: 'bar',
        //             data: {
        //                 labels: chartData.labels,
        //                 datasets: [{
        //                     label: 'Population',
        //                     data: chartData.data,
        //                     backgroundColor: 'rgba(75, 192, 192, 0.2)',
        //                     borderColor: 'rgba(75, 192, 192, 1)',
        //                     borderWidth: 1
        //                 }]
        //             },
        //             options: {
        //                 scales: {
        //                     y: { beginAtZero: true }
        //                 }
        //             }
        //         });
        //     }
        // });

       
        // $(document).ready(function () {
        //     // Écoutez les clics sur les boutons de la table
        //     $('body').on('click', '[data-toggle="modal"]', function () {
        //         var regionNom = $(this).data('region');
        //         var selectedYear = $('#yearSelector').val(); // Récupère l'année sélectionnée

        //         $.ajax({
        //             url: '/Indicateurs/GetPopulationData',
        //             type: 'GET',
        //             data: { regionNom: regionNom, year: selectedYear },
        //             success: function (data) {
        //                 console.log(data); // Affiche les données reçues dans la console pour déboguer

        //                 // Vide le tableau avant d'ajouter les nouvelles lignes
        //                 var tableBody = $('#populationTableBody').empty();
        //                 data.populationData.forEach(function (item) {
        //                     tableBody.append(
        //                         `<tr><td>${item.commune}</td><td>${item.population}</td></tr>`
        //                     );
        //                 });

        //                 // Rafraîchit le graphique avec les nouvelles données
        //                 loadPopulationChart(data.populationChartData);
        //             }
        //         });
        //     });

        //     // Fonction pour créer le graphique
        //     function loadPopulationChart(chartData) {
        //         // Vérifie que les données ne sont pas vides
        //         if (!chartData || chartData.labels.length === 0 || chartData.data.length === 0) {
        //             alert("Pas de données pour afficher le graphique.");
        //             return;
        //         }

        //         var ctx = document.getElementById('populationChart').getContext('2d');
        //         if (!ctx) {
        //             alert("Canvas non trouvé.");
        //             return;
        //         }

        //         // Détruit l'ancien graphique, s'il existe
        //         if (window.populationChart) {
        //             window.populationChart.destroy();
        //         }

        //         // Crée un nouveau graphique
        //         window.populationChart = new Chart(ctx, {
        //             type: 'bar',
        //             data: {
        //                 labels: chartData.labels,
        //                 datasets: [{
        //                     label: 'Population',
        //                     data: chartData.data,
        //                     backgroundColor: 'rgba(75, 192, 192, 0.2)',
        //                     borderColor: 'rgba(75, 192, 192, 1)',
        //                     borderWidth: 1
        //                 }]
        //             },
        //             options: {
        //                 scales: {
        //                     y: { beginAtZero: true }
        //                 }
        //             }
        //         });
        //     }
        // });

        // $(document).ready(function () {
        //     if (window.populationChart) {
        //         window.populationChart.destroy();
        //     }
        //     // Écoutez les clics sur les boutons de la table
        //     $('body').on('click', '[data-toggle="modal"]', function () {
        //         var regionNom = $(this).data('region');
        //         var selectedYear = $('#yearSelector').val(); // Récupère l'année sélectionnée

        //         $.ajax({
        //             url: '/Indicateurs/GetPopulationData',
        //             type: 'GET',
        //             data: { regionNom: regionNom, year: selectedYear },
        //             success: function (data) {
        //                 console.log(data); // Affiche les données reçues dans la console pour déboguer

        //                 // Vide le tableau avant d'ajouter les nouvelles lignes
        //                 var tableBody = $('#populationTableBody').empty();
        //                 data.populationData.forEach(function (item) {
        //                     tableBody.append(
        //                         `<tr><td>${item.commune}</td><td>${item.population}</td></tr>`
        //                     );
        //                 });

        //                 // Rafraîchit le graphique avec les nouvelles données
        //                 loadPopulationChart(data.populationChartData);
        //             }
        //         });
        //     });

        //     // Fonction pour créer le graphique
        //     function loadPopulationChart(chartData) {
        //         // Vérifie que les données ne sont pas vides
        //         if (!chartData || chartData.labels.length === 0 || chartData.data.length === 0) {
        //             alert("Pas de données pour afficher le graphique.");
        //             return;
        //         }

        //         var ctx = document.getElementById('populationChart').getContext('2d');

        //         // Détruit l'ancien graphique, s'il existe
        //         if (window.populationChart) {
        //             window.populationChart.destroy();
        //         }

        //         // Crée un nouveau graphique
        //         window.populationChart = new Chart(ctx, {
        //             type: 'bar',
        //             data: {
        //                 labels: chartData.labels,
        //                 datasets: [{
        //                     label: 'Population',
        //                     data: chartData.data,
        //                     backgroundColor: 'rgba(75, 192, 192, 0.2)',
        //                     borderColor: 'rgba(75, 192, 192, 1)',
        //                     borderWidth: 1
        //                 }]
        //             },
        //             options: {
        //                 scales: {
        //                     y: { beginAtZero: true }
        //                 }
        //             }
        //         });
        //     }
        // });


      
        //$(document).ready(function () {
            // Écoutez les clics sur les boutons de la table
        //     $('body').on('click', '[data-toggle="modal"]', function () {
        //         var regionNom = $(this).data('region');
        //         var selectedYear = $('#yearSelector').val(); // Récupère l'année sélectionnée

        //         $.ajax({
        //             url: '/Indicateurs/GetPopulationData',
        //             type: 'GET',
        //             data: { regionNom: regionNom, year: selectedYear },
        //             success: function (data) {
        //                 // Vide le tableau avant d'ajouter les nouvelles lignes
        //                 var tableBody = $('#populationTableBody').empty();
        //                 data.populationData.forEach(function (item) {
        //                     tableBody.append(`
        //                     <tr>
        //                         <td>${item.commune}</td>
        //                         <td>${item.population}</td>
        //                     </tr>
        //                 `);
        //                 });

        //                 // Rafraîchit le graphique avec les nouvelles données
        //                 loadPopulationChart(data.populationChartData);
        //             }
        //         });
        //     });

        //     // Fonction pour créer le graphique
        //     function loadPopulationChart(chartData) {
        //         var ctx = document.getElementById('populationChart').getContext('2d');

        //         // Détruit l'ancien graphique, s'il existe, avant de créer un nouveau
        //         if (window.populationChart) {
        //             window.populationChart.destroy();
        //         }

        //         // Crée un nouveau graphique
        //         window.populationChart = new Chart(ctx, {
        //             type: 'bar',
        //             data: {
        //                 labels: chartData.labels,
        //                 datasets: [{
        //                     label: 'Population',
        //                     data: chartData.data,
        //                     backgroundColor: 'rgba(75, 192, 192, 0.2)',
        //                     borderColor: 'rgba(75, 192, 192, 1)',
        //                     borderWidth: 1
        //                 }]
        //             },
        //             options: {
        //                 scales: {
        //                     y: { beginAtZero: true }
        //                 }
        //             }
        //         });
        //     }
        // });


        // $(document).ready(function () {
        //     // Écoutez les clics sur les boutons de la table
        //     $('body').on('click', '[data-toggle="modal"]', function () {
        //         var regionNom = $(this).data('region');
        //         var selectedYear = $('#yearSelector').val(); // Add a selector for the year

        //         $.ajax({
        //             url: '/Indicateurs/GetPopulationData',
        //             type: 'GET',
        //             data: { regionNom: regionNom, year: selectedYear },
        //             success: function (data) {
        //                 var tableBody = $('#populationTableBody').empty();
        //                 data.populationData.forEach(function (item) {
        //                     tableBody.append(`
        //                     <tr>
        //                         <td>${item.commune}</td>
        //                         <td>${item.population}</td>
        //                     </tr>
        //                 `);
        //                 });

        //                 loadPopulationChart(data.populationChartData);
        //             }
        //         });
        //     });
        //     // $('body').on('click', '[data-toggle="modal"]', function () {
        //     //     var regionNom = $(this).data('region');

        //     //     // Assurez-vous de récupérer les données de votre backend
        //     //     $.ajax({
        //     //         url: '/Indicateurs/GetPopulationData', // Changez l'URL selon vos routes
        //     //         type: 'GET',
        //     //         data: { regionNom: regionNom },
        //     //         success: function (data) {
        //     //             // Remplir le tableau de population dans la modal
        //     //             var tableBody = $('#populationTableBody').empty();
        //     //             data.populationData.forEach(function (item) {
        //     //                 tableBody.append(`
        //     //                     <tr>
        //     //                         <td>${item.commune}</td>
        //     //                         <td>${item.population}</td>
        //     //                     </tr>
        //     //                 `);
        //     //             });

        //     //             // Charger le graphique avec les données
        //     //             loadPopulationChart(data.populationChartData);
        //     //         }
        //     //     });
        //     // });
        // });

        // Fonction pour créer le graphique
        // function loadPopulationChart(chartData) {
        //     var ctx = document.getElementById('populationChart').getContext('2d');
        //     var chart = new Chart(ctx, {
        //         type: 'bar',
        //         data: {
        //             labels: chartData.labels,
        //             datasets: [{
        //                 label: 'Population',
        //                 data: chartData.data,
        //                 backgroundColor: 'rgba(75, 192, 192, 0.2)',
        //                 borderColor: 'rgba(75, 192, 192, 1)',
        //                 borderWidth: 1
        //             }]
        //         },
        //         options: {
        //             scales: {
        //                 y: { beginAtZero: true }
        //             }
        //         }
        //     });
        // }

    </script>

    <script>
        $(document).ready(function () {
            // Action de déploiement
            $('[data-action="collapse"]').click(function () {
                let cardContent = $(this).closest('.card-header').parent().find('.card-content');
                cardContent.slideToggle();
                $(this).find('i').toggleClass('ft-minus ft-plus');
            });

            // Action de rechargement
            $('[data-action="reload"]').click(function () {
                // Remplacez ceci par votre code pour recharger les données
                location.reload(); // Par exemple : recharger la page
            });

            // Action d'agrandissement
            $('[data-action="expand"]').click(function () {
                let card = $(this).closest('.card');
                card.toggleClass('full-screen');
                if (card.hasClass('full-screen')) {
                    $(this).find('i').removeClass('ft-maximize').addClass('ft-minimize');
                    card.find('.card-content').css('height', '100vh'); // Ajuster la hauteur si nécessaire
                } else {
                    $(this).find('i').removeClass('ft-minimize').addClass('ft-maximize');
                    card.find('.card-content').css('height', ''); // Réinitialiser la hauteur
                }
            });

            // Action de fermeture
            $('[data-action="close"]').click(function () {
                $(this).closest('.card').remove(); // Supprime la carte
            });
        });

    </script>
</body>
</html>
